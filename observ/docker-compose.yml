services:
  # =========================
  # PROXY REVERSO + SITE
  # =========================
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/snippets:/etc/nginx/snippets:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/site:/var/www/mrqz.me:ro
    networks:
      - proxy-network
      - ollama-network 

  # =========================
  # GESTÃƒO
  # =========================
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    restart: unless-stopped
#    ports:
#      - 8000:8000
#      - 9000:9000
#      - 9443:9443
#    command:
#      - '--base-url=/infra'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - proxy-network

  # =========================
  # OBSERVABILIDADE
  # =========================
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=marquezjp
      - GF_SECURITY_ADMIN_PASSWORD=jquest
      #      - GF_SERVER_ROOT_URL=https://mrqz.me/painel/
#      - GF_SERVER_SERVE_FROM_SUB_PATH=true
#      - GF_USERS_ALLOW_SIGN_UP=false
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana-data:/var/lib/grafana
    networks:
      - proxy-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9090/coletor/-/ready > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--log.level=warn'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.external-url=https://mrqz.me/coletor'
      - '--web.route-prefix=/coletor'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - proxy-network

  # =========================
  # EXPORTERS / AGENTES
  # =========================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - proxy-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    command:
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.processes'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.filesystem.ignored-fs-types=^(autofs|proc|sysfs|cgroup.*|overlay|squashfs|tmpfs|devtmpfs|nsfs|tracefs)$$'
      - '--no-collector.ipvs'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - proxy-network

  apcupsd:
    image: jangrewe/apcupsd-exporter:latest
    container_name: apcupsd
    restart: unless-stopped
    network_mode: "host"

  dcgm-exporter:
    image: nvidia/dcgm-exporter:4.4.0-4.5.0-ubuntu22.04
    container_name: dcgm-exporter
    hostname: dcgm-exporter
    restart: unless-stopped
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    cap_add:
      - SYS_ADMIN
    environment:
      - DCGM_EXPORTER_LISTEN=0.0.0.0:9400
      - DCGM_EXPORTER_KUBERNETES=false
    networks:
      - proxy-network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    restart: unless-stopped
    command:
      - --nginx.scrape-uri=http://nginx:8080/metrics
      - --web.listen-address=:9113
    networks:
      - proxy-network

  # =========================
  # LOGS (Loki + Promtail)
  # =========================
  loki:
    image: grafana/loki:2.9.8
    container_name: loki
    restart: unless-stopped
    command: [ "-config.file=/etc/loki/config/config.yml" ]
    volumes:
      - ./loki/config.yml:/etc/loki/config/config.yml:ro
      - loki-data:/loki
    networks:
      - proxy-network

  promtail:
    image: grafana/promtail:2.9.8
    container_name: promtail
    restart: unless-stopped
    command: [ "-config.file=/etc/promtail/config.yml" ]
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log:/var/log:ro
      - promtail-positions:/tmp
    networks:
      - proxy-network

# =========================
# VOLUMES / REDE
# =========================
volumes:
  portainer-data:
  prometheus-data:
  grafana-data:
  loki-data:
  promtail-positions:

networks:
  proxy-network:
    external: true
  ollama-network:
    external: true