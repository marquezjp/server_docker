services:
  nginx:
    image: nginx
    container_name: nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/html:/usr/share/nginx/html:ro
      - ./nginx/config:/etc/nginx
      - ./nginx/cert:/cert
    networks:
      - proxy-network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    restart: unless-stopped
    ports:
      - 3010:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - proxy-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    ports:
      - "3030:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - proxy-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    hostname: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - proxy-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    restart: unless-stopped
    ports:
      - "8081:8081"
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - proxy-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    ports:
      - "3020:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=jquest  # Altere para uma senha segura
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - proxy-network

  loki:
    image: grafana/loki:latest
    container_name: loki
    hostname: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - proxy-network

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    hostname: promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
    networks:
      - proxy-network

  apcupsd:
    image: jangrewe/apcupsd-exporter
    container_name: apcupsd
    hostname: apcupsd
    restart: unless-stopped
    networks:
      - proxy-network

  noip-duc:
    image: ghcr.io/noipcom/noip-duc:latest
    container_name: noip-duc
    hostname: noip-duc
    restart: unless-stopped
    env_file:
      - .env
      - noip/noip-duc.env
    networks:
      - proxy-network

volumes:
  prometheus-data:
  grafana-data:

networks:
  proxy-network:
    external: true
