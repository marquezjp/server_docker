services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_SECURITY_ADMIN_USER=marquezjp
      - GF_SECURITY_ADMIN_PASSWORD=jquest
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://grafana.mrqz.me
      - GF_SERVER_DOMAIN=grafana.mrqz.me
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - proxy-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9090 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--log.level=error'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    networks:
      - proxy-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - proxy-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - proxy-network

#  apcupsd:
#    image: jangrewe/apcupsd-exporter:latest
#    container_name: apcupsd
#    restart: unless-stopped
#    networks:
#      - proxy-network

#  dcgm-exporter:
#    image: nvcr.io/nvidia/k8s/dcgm-exporter:4.4.0-4.5.0-ubuntu22.04
#    image: nvcr.io/nvidia/k8s/dcgm-exporter:4.2.3-4.1.1-ubuntu22.04
#    container_name: dcgm-exporter
#    restart: unless-stopped
#    gpus: all
#    environment:
#      - DCGM_EXPORTER_LISTEN=0.0.0.0:9400
#      - DCGM_EXPORTER_KUBERNETES=false
#      - NVIDIA_VISIBLE_DEVICES=all
#      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
#    networks:
#      - proxy-network

#  loki:
#    image: grafana/loki:latest
#    container_name: loki
#    restart: unless-stopped
#    command: -config.file=/etc/loki/local-config.yaml
#    networks:
#      - proxy-network

#  promtail:
#    image: grafana/promtail:latest
#    container_name: promtail
#    restart: unless-stopped
#    command: -config.file=/etc/promtail/config.yml
#    volumes:
#      - /var/log:/var/log
#      - ./promtail:/etc/promtail
#    networks:
#      - proxy-network

volumes:
  prometheus-data:
  grafana-data:

networks:
  proxy-network:
    external: true
