# HTTP -> HTTPS para domínio principal
server {
  listen 80;
  listen [::]:80;
  server_name mrqz.me www.mrqz.me;
  return 301 https://mrqz.me$request_uri;
}

# HTTPS principal + subpaths (site + proxy)
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;

  server_name mrqz.me;

  include /etc/nginx/snippets/ssl-mrqz.conf;
  include /etc/nginx/snippets/proxy-common.conf;

  # ---- Site estático raiz
  root /var/www/mrqz.me;
  index index.html;

  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options SAMEORIGIN always;
  add_header Referrer-Policy strict-origin-when-cross-origin always;

  location ~* \.(?:png|jpg|jpeg|gif|svg|webp|ico|css|js)$ {
    access_log off;
    expires 7d;
    add_header Cache-Control "public, max-age=604800, immutable";
    try_files $uri =404;
  }

  location / {
    try_files $uri $uri/ /index.html;
  }

  # Healthcheck simples do proxy
  location = /healthz {
      access_log off;
      add_header Cache-Control "no-store" always;
      add_header Content-Type "text/plain; charset=utf-8";
      return 200 "ok\n";
  }

  # ---- Prometheus: https://mrqz.me/coletor
  location = /coletor { return 308 /coletor/; }
  location ^~ /coletor/ {
    proxy_pass http://prometheus:9090;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Cache-Control "no-store";
    proxy_redirect ~^http(s)?://[^/]+(/.*)$ https://$host/coletor$2;
  }

  # ---- Loki (HTTP API) sob /logs
  location = /logs { return 308 /logs/; }
  location ^~ /logs/ {
    proxy_pass http://loki:3100/;
    proxy_redirect off;
    proxy_set_header X-Scope-OrgID "1";
    # (opcional) habilitar auth básica:
    # auth_basic "Logs Loki";
    # auth_basic_user_file /etc/nginx/.htpasswd;
  }
}

